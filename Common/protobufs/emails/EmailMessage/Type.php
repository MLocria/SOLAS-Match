<?php
namespace SolasMatch\Common\Protobufs\Emails\EmailMessage;

// @@protoc_insertion_point(namespace:.SolasMatch.Common.Protobufs.Emails.EmailMessage.Type)

/**
 * Generated by the protocol buffer compiler.  DO NOT EDIT!
 * source: EmailMessage.proto
 *
 */
class Type extends \ProtocolBuffers\Enum
{
  // @@protoc_insertion_point(traits:.SolasMatch.Common.Protobufs.Emails.EmailMessage.Type)
  
  const TaskScoreEmail = 1;
  const UserTaskClaim = 2;
  const OrgMembershipAccepted = 3;
  const OrgMembershipRefused = 4;
  const PasswordResetEmail = 5;
  const TaskArchived = 6;
  const TaskClaimed = 7;
  const TrackedTaskUploaded = 8;
  const OrgTaskDeadlinePassed = 9;
  const UserClaimedTaskDeadlinePassed = 10;
  const UserFeedback = 11;
  const UserTaskStreamEmail = 12;
  const EmailVerification = 13;
  const BannedLogin = 14;
  const TrackedTaskSourceUpdated = 15;
  const ClaimedTaskUploaded = 16;
  const ClaimedTaskSourceUpdated = 17;
  const OrgFeedback = 18;
  const OrgCreatedSiteAdmin = 19;
  const OrgCreatedOrgAdmin = 20;
  const UserReferenceEmail = 21;
  const UserBadgeAwardedEmail = 22;
  const UserUnclaimedTask = 23;
  const UserTaskRevokedEmail = 24;
  const OrgTaskRevokedEmail = 25;
  const ProjectCreated = 26;
  const BannedFromOrg = 27;
  const UserBannedNotificationToOrg = 28;
  const ProjectImageUploadedEmail = 29;
  const ProjectImageRemovedEmail = 30;
  const ProjectImageApprovedEmail = 31;
  const ProjectImageDisapprovedEmail = 32;
  
  // @@protoc_insertion_point(const_scope:.SolasMatch.Common.Protobufs.Emails.EmailMessage.Type)
  
  // @@protoc_insertion_point(class_scope:.SolasMatch.Common.Protobufs.Emails.EmailMessage.Type)
  
  /**
   * @return \ProtocolBuffers\EnumDescriptor
   */
  public static function getEnumDescriptor()
  {
    static $descriptor;
    if (!$descriptor) {
      $builder = new \ProtocolBuffers\EnumDescriptorBuilder();
      $builder->addValue(new \ProtocolBuffers\EnumValueDescriptor(array(
        "value" => self::TaskScoreEmail,
        "name"  => 'TaskScoreEmail',
      )));
      $builder->addValue(new \ProtocolBuffers\EnumValueDescriptor(array(
        "value" => self::UserTaskClaim,
        "name"  => 'UserTaskClaim',
      )));
      $builder->addValue(new \ProtocolBuffers\EnumValueDescriptor(array(
        "value" => self::OrgMembershipAccepted,
        "name"  => 'OrgMembershipAccepted',
      )));
      $builder->addValue(new \ProtocolBuffers\EnumValueDescriptor(array(
        "value" => self::OrgMembershipRefused,
        "name"  => 'OrgMembershipRefused',
      )));
      $builder->addValue(new \ProtocolBuffers\EnumValueDescriptor(array(
        "value" => self::PasswordResetEmail,
        "name"  => 'PasswordResetEmail',
      )));
      $builder->addValue(new \ProtocolBuffers\EnumValueDescriptor(array(
        "value" => self::TaskArchived,
        "name"  => 'TaskArchived',
      )));
      $builder->addValue(new \ProtocolBuffers\EnumValueDescriptor(array(
        "value" => self::TaskClaimed,
        "name"  => 'TaskClaimed',
      )));
      $builder->addValue(new \ProtocolBuffers\EnumValueDescriptor(array(
        "value" => self::TrackedTaskUploaded,
        "name"  => 'TrackedTaskUploaded',
      )));
      $builder->addValue(new \ProtocolBuffers\EnumValueDescriptor(array(
        "value" => self::OrgTaskDeadlinePassed,
        "name"  => 'OrgTaskDeadlinePassed',
      )));
      $builder->addValue(new \ProtocolBuffers\EnumValueDescriptor(array(
        "value" => self::UserClaimedTaskDeadlinePassed,
        "name"  => 'UserClaimedTaskDeadlinePassed',
      )));
      $builder->addValue(new \ProtocolBuffers\EnumValueDescriptor(array(
        "value" => self::UserFeedback,
        "name"  => 'UserFeedback',
      )));
      $builder->addValue(new \ProtocolBuffers\EnumValueDescriptor(array(
        "value" => self::UserTaskStreamEmail,
        "name"  => 'UserTaskStreamEmail',
      )));
      $builder->addValue(new \ProtocolBuffers\EnumValueDescriptor(array(
        "value" => self::EmailVerification,
        "name"  => 'EmailVerification',
      )));
      $builder->addValue(new \ProtocolBuffers\EnumValueDescriptor(array(
        "value" => self::BannedLogin,
        "name"  => 'BannedLogin',
      )));
      $builder->addValue(new \ProtocolBuffers\EnumValueDescriptor(array(
        "value" => self::TrackedTaskSourceUpdated,
        "name"  => 'TrackedTaskSourceUpdated',
      )));
      $builder->addValue(new \ProtocolBuffers\EnumValueDescriptor(array(
        "value" => self::ClaimedTaskUploaded,
        "name"  => 'ClaimedTaskUploaded',
      )));
      $builder->addValue(new \ProtocolBuffers\EnumValueDescriptor(array(
        "value" => self::ClaimedTaskSourceUpdated,
        "name"  => 'ClaimedTaskSourceUpdated',
      )));
      $builder->addValue(new \ProtocolBuffers\EnumValueDescriptor(array(
        "value" => self::OrgFeedback,
        "name"  => 'OrgFeedback',
      )));
      $builder->addValue(new \ProtocolBuffers\EnumValueDescriptor(array(
        "value" => self::OrgCreatedSiteAdmin,
        "name"  => 'OrgCreatedSiteAdmin',
      )));
      $builder->addValue(new \ProtocolBuffers\EnumValueDescriptor(array(
        "value" => self::OrgCreatedOrgAdmin,
        "name"  => 'OrgCreatedOrgAdmin',
      )));
      $builder->addValue(new \ProtocolBuffers\EnumValueDescriptor(array(
        "value" => self::UserReferenceEmail,
        "name"  => 'UserReferenceEmail',
      )));
      $builder->addValue(new \ProtocolBuffers\EnumValueDescriptor(array(
        "value" => self::UserBadgeAwardedEmail,
        "name"  => 'UserBadgeAwardedEmail',
      )));
      $builder->addValue(new \ProtocolBuffers\EnumValueDescriptor(array(
        "value" => self::UserUnclaimedTask,
        "name"  => 'UserUnclaimedTask',
      )));
      $builder->addValue(new \ProtocolBuffers\EnumValueDescriptor(array(
        "value" => self::UserTaskRevokedEmail,
        "name"  => 'UserTaskRevokedEmail',
      )));
      $builder->addValue(new \ProtocolBuffers\EnumValueDescriptor(array(
        "value" => self::OrgTaskRevokedEmail,
        "name"  => 'OrgTaskRevokedEmail',
      )));
      $builder->addValue(new \ProtocolBuffers\EnumValueDescriptor(array(
        "value" => self::ProjectCreated,
        "name"  => 'ProjectCreated',
      )));
      $builder->addValue(new \ProtocolBuffers\EnumValueDescriptor(array(
        "value" => self::BannedFromOrg,
        "name"  => 'BannedFromOrg',
      )));
      $builder->addValue(new \ProtocolBuffers\EnumValueDescriptor(array(
        "value" => self::UserBannedNotificationToOrg,
        "name"  => 'UserBannedNotificationToOrg',
      )));
      $builder->addValue(new \ProtocolBuffers\EnumValueDescriptor(array(
        "value" => self::ProjectImageUploadedEmail,
        "name"  => 'ProjectImageUploadedEmail',
      )));
      $builder->addValue(new \ProtocolBuffers\EnumValueDescriptor(array(
        "value" => self::ProjectImageRemovedEmail,
        "name"  => 'ProjectImageRemovedEmail',
      )));
      $builder->addValue(new \ProtocolBuffers\EnumValueDescriptor(array(
        "value" => self::ProjectImageApprovedEmail,
        "name"  => 'ProjectImageApprovedEmail',
      )));
      $builder->addValue(new \ProtocolBuffers\EnumValueDescriptor(array(
        "value" => self::ProjectImageDisapprovedEmail,
        "name"  => 'ProjectImageDisapprovedEmail',
      )));
      // @@protoc_insertion_point(builder_scope:.SolasMatch.Common.Protobufs.Emails.EmailMessage.Type)
      $descriptor = $builder->build();
    }
    return $descriptor;
  }
}
