<?php
// DO NOT EDIT! Generated by Protobuf-PHP protoc plugin 0.9.4
// Source: TaskRevokedNotification.proto
//   Date: 2014-03-05 19:32:48

namespace SolasMatch\Common\Protobufs\Notifications {

  class TaskRevokedNotification extends \DrSlump\Protobuf\Message {

    /**  @var string */
    public $class_name = "TaskRevokedNotification";
    
    /**  @var int */
    public $task_id = null;
    
    /**  @var int */
    public $claimant_id = null;
    

    /** @var \Closure[] */
    protected static $__extensions = array();

    public static function descriptor()
    {
      $descriptor = new \DrSlump\Protobuf\Descriptor(__CLASS__, 'SolasMatch.Common.Protobufs.Notifications.TaskRevokedNotification');

      // REQUIRED STRING class_name = 1
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 1;
      $f->name      = "class_name";
      $f->type      = \DrSlump\Protobuf::TYPE_STRING;
      $f->rule      = \DrSlump\Protobuf::RULE_REQUIRED;
      $f->default   = "TaskRevokedNotification";
      $descriptor->addField($f);

      // REQUIRED INT32 task_id = 2
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 2;
      $f->name      = "task_id";
      $f->type      = \DrSlump\Protobuf::TYPE_INT32;
      $f->rule      = \DrSlump\Protobuf::RULE_REQUIRED;
      $descriptor->addField($f);

      // REQUIRED INT32 claimant_id = 3
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 3;
      $f->name      = "claimant_id";
      $f->type      = \DrSlump\Protobuf::TYPE_INT32;
      $f->rule      = \DrSlump\Protobuf::RULE_REQUIRED;
      $descriptor->addField($f);

      foreach (self::$__extensions as $cb) {
        $descriptor->addField($cb(), true);
      }

      return $descriptor;
    }

    /**
     * Check if <class_name> has a value
     *
     * @return boolean
     */
    public function hasClassName(){
      return $this->_has(1);
    }
    
    /**
     * Clear <class_name> value
     *
     * @return \SolasMatch\Common\Protobufs\Notifications\TaskRevokedNotification
     */
    public function clearClassName(){
      return $this->_clear(1);
    }
    
    /**
     * Get <class_name> value
     *
     * @return string
     */
    public function getClassName(){
      return $this->_get(1);
    }
    
    /**
     * Set <class_name> value
     *
     * @param string $value
     * @return \SolasMatch\Common\Protobufs\Notifications\TaskRevokedNotification
     */
    public function setClassName( $value){
      return $this->_set(1, $value);
    }
    
    /**
     * Check if <task_id> has a value
     *
     * @return boolean
     */
    public function hasTaskId(){
      return $this->_has(2);
    }
    
    /**
     * Clear <task_id> value
     *
     * @return \SolasMatch\Common\Protobufs\Notifications\TaskRevokedNotification
     */
    public function clearTaskId(){
      return $this->_clear(2);
    }
    
    /**
     * Get <task_id> value
     *
     * @return int
     */
    public function getTaskId(){
      return $this->_get(2);
    }
    
    /**
     * Set <task_id> value
     *
     * @param int $value
     * @return \SolasMatch\Common\Protobufs\Notifications\TaskRevokedNotification
     */
    public function setTaskId( $value){
      return $this->_set(2, $value);
    }
    
    /**
     * Check if <claimant_id> has a value
     *
     * @return boolean
     */
    public function hasClaimantId(){
      return $this->_has(3);
    }
    
    /**
     * Clear <claimant_id> value
     *
     * @return \SolasMatch\Common\Protobufs\Notifications\TaskRevokedNotification
     */
    public function clearClaimantId(){
      return $this->_clear(3);
    }
    
    /**
     * Get <claimant_id> value
     *
     * @return int
     */
    public function getClaimantId(){
      return $this->_get(3);
    }
    
    /**
     * Set <claimant_id> value
     *
     * @param int $value
     * @return \SolasMatch\Common\Protobufs\Notifications\TaskRevokedNotification
     */
    public function setClaimantId( $value){
      return $this->_set(3, $value);
    }
  }
}

