<?php
// DO NOT EDIT! Generated by Protobuf-PHP protoc plugin 0.9.4
// Source: ProtoList.proto
//   Date: 2014-03-05 17:53:50

namespace SolasMatch\Common\Protobufs\Models {

  class ProtoList extends \DrSlump\Protobuf\Message {

    /**  @var string[]  */
    public $item = array();
    

    /** @var \Closure[] */
    protected static $__extensions = array();

    public static function descriptor()
    {
      $descriptor = new \DrSlump\Protobuf\Descriptor(__CLASS__, 'SolasMatch.Common.Protobufs.Models.ProtoList');

      // REPEATED STRING item = 1
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 1;
      $f->name      = "item";
      $f->type      = \DrSlump\Protobuf::TYPE_STRING;
      $f->rule      = \DrSlump\Protobuf::RULE_REPEATED;
      $descriptor->addField($f);

      foreach (self::$__extensions as $cb) {
        $descriptor->addField($cb(), true);
      }

      return $descriptor;
    }

    /**
     * Check if <item> has a value
     *
     * @return boolean
     */
    public function hasItem(){
      return $this->_has(1);
    }
    
    /**
     * Clear <item> value
     *
     * @return \SolasMatch\Common\Protobufs\Models\ProtoList
     */
    public function clearItem(){
      return $this->_clear(1);
    }
    
    /**
     * Get <item> value
     *
     * @param int $idx
     * @return string
     */
    public function getItem($idx = NULL){
      return $this->_get(1, $idx);
    }
    
    /**
     * Set <item> value
     *
     * @param string $value
     * @return \SolasMatch\Common\Protobufs\Models\ProtoList
     */
    public function setItem( $value, $idx = NULL){
      return $this->_set(1, $value, $idx);
    }
    
    /**
     * Get all elements of <item>
     *
     * @return string[]
     */
    public function getItemList(){
     return $this->_get(1);
    }
    
    /**
     * Add a new element to <item>
     *
     * @param string $value
     * @return \SolasMatch\Common\Protobufs\Models\ProtoList
     */
    public function addItem( $value){
     return $this->_add(1, $value);
    }
  }
}

