<?php
// DO NOT EDIT! Generated by Protobuf-PHP protoc plugin 0.9.4
// Source: TaskMetadata.proto
//   Date: 2014-03-05 17:53:46

namespace SolasMatch\Common\Protobufs\Models {

  class TaskMetadata extends \DrSlump\Protobuf\Message {

    /**  @var int */
    public $id = null;
    
    /**  @var int */
    public $version = null;
    
    /**  @var string */
    public $filename = null;
    
    /**  @var string */
    public $content_type = null;
    
    /**  @var int */
    public $user_id = null;
    
    /**  @var string */
    public $upload_time = null;
    

    /** @var \Closure[] */
    protected static $__extensions = array();

    public static function descriptor()
    {
      $descriptor = new \DrSlump\Protobuf\Descriptor(__CLASS__, 'SolasMatch.Common.Protobufs.Models.TaskMetadata');

      // OPTIONAL INT32 id = 1
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 1;
      $f->name      = "id";
      $f->type      = \DrSlump\Protobuf::TYPE_INT32;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      // OPTIONAL INT32 version = 2
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 2;
      $f->name      = "version";
      $f->type      = \DrSlump\Protobuf::TYPE_INT32;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      // OPTIONAL STRING filename = 3
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 3;
      $f->name      = "filename";
      $f->type      = \DrSlump\Protobuf::TYPE_STRING;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      // OPTIONAL STRING content_type = 4
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 4;
      $f->name      = "content_type";
      $f->type      = \DrSlump\Protobuf::TYPE_STRING;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      // OPTIONAL INT32 user_id = 5
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 5;
      $f->name      = "user_id";
      $f->type      = \DrSlump\Protobuf::TYPE_INT32;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      // OPTIONAL STRING upload_time = 6
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 6;
      $f->name      = "upload_time";
      $f->type      = \DrSlump\Protobuf::TYPE_STRING;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      foreach (self::$__extensions as $cb) {
        $descriptor->addField($cb(), true);
      }

      return $descriptor;
    }

    /**
     * Check if <id> has a value
     *
     * @return boolean
     */
    public function hasId(){
      return $this->_has(1);
    }
    
    /**
     * Clear <id> value
     *
     * @return \SolasMatch\Common\Protobufs\Models\TaskMetadata
     */
    public function clearId(){
      return $this->_clear(1);
    }
    
    /**
     * Get <id> value
     *
     * @return int
     */
    public function getId(){
      return $this->_get(1);
    }
    
    /**
     * Set <id> value
     *
     * @param int $value
     * @return \SolasMatch\Common\Protobufs\Models\TaskMetadata
     */
    public function setId( $value){
      return $this->_set(1, $value);
    }
    
    /**
     * Check if <version> has a value
     *
     * @return boolean
     */
    public function hasVersion(){
      return $this->_has(2);
    }
    
    /**
     * Clear <version> value
     *
     * @return \SolasMatch\Common\Protobufs\Models\TaskMetadata
     */
    public function clearVersion(){
      return $this->_clear(2);
    }
    
    /**
     * Get <version> value
     *
     * @return int
     */
    public function getVersion(){
      return $this->_get(2);
    }
    
    /**
     * Set <version> value
     *
     * @param int $value
     * @return \SolasMatch\Common\Protobufs\Models\TaskMetadata
     */
    public function setVersion( $value){
      return $this->_set(2, $value);
    }
    
    /**
     * Check if <filename> has a value
     *
     * @return boolean
     */
    public function hasFilename(){
      return $this->_has(3);
    }
    
    /**
     * Clear <filename> value
     *
     * @return \SolasMatch\Common\Protobufs\Models\TaskMetadata
     */
    public function clearFilename(){
      return $this->_clear(3);
    }
    
    /**
     * Get <filename> value
     *
     * @return string
     */
    public function getFilename(){
      return $this->_get(3);
    }
    
    /**
     * Set <filename> value
     *
     * @param string $value
     * @return \SolasMatch\Common\Protobufs\Models\TaskMetadata
     */
    public function setFilename( $value){
      return $this->_set(3, $value);
    }
    
    /**
     * Check if <content_type> has a value
     *
     * @return boolean
     */
    public function hasContentType(){
      return $this->_has(4);
    }
    
    /**
     * Clear <content_type> value
     *
     * @return \SolasMatch\Common\Protobufs\Models\TaskMetadata
     */
    public function clearContentType(){
      return $this->_clear(4);
    }
    
    /**
     * Get <content_type> value
     *
     * @return string
     */
    public function getContentType(){
      return $this->_get(4);
    }
    
    /**
     * Set <content_type> value
     *
     * @param string $value
     * @return \SolasMatch\Common\Protobufs\Models\TaskMetadata
     */
    public function setContentType( $value){
      return $this->_set(4, $value);
    }
    
    /**
     * Check if <user_id> has a value
     *
     * @return boolean
     */
    public function hasUserId(){
      return $this->_has(5);
    }
    
    /**
     * Clear <user_id> value
     *
     * @return \SolasMatch\Common\Protobufs\Models\TaskMetadata
     */
    public function clearUserId(){
      return $this->_clear(5);
    }
    
    /**
     * Get <user_id> value
     *
     * @return int
     */
    public function getUserId(){
      return $this->_get(5);
    }
    
    /**
     * Set <user_id> value
     *
     * @param int $value
     * @return \SolasMatch\Common\Protobufs\Models\TaskMetadata
     */
    public function setUserId( $value){
      return $this->_set(5, $value);
    }
    
    /**
     * Check if <upload_time> has a value
     *
     * @return boolean
     */
    public function hasUploadTime(){
      return $this->_has(6);
    }
    
    /**
     * Clear <upload_time> value
     *
     * @return \SolasMatch\Common\Protobufs\Models\TaskMetadata
     */
    public function clearUploadTime(){
      return $this->_clear(6);
    }
    
    /**
     * Get <upload_time> value
     *
     * @return string
     */
    public function getUploadTime(){
      return $this->_get(6);
    }
    
    /**
     * Set <upload_time> value
     *
     * @param string $value
     * @return \SolasMatch\Common\Protobufs\Models\TaskMetadata
     */
    public function setUploadTime( $value){
      return $this->_set(6, $value);
    }
  }
}

