<?php
// DO NOT EDIT! Generated by Protobuf-PHP protoc plugin 0.9.4
// Source: ArchivedTask.proto
//   Date: 2014-03-05 17:53:43

namespace SolasMatch\Common\Protobufs\Models {

  class ArchivedTask extends \DrSlump\Protobuf\Message {

    /**  @var int */
    public $id = null;
    
    /**  @var int */
    public $projectId = null;
    
    /**  @var string */
    public $title = null;
    
    /**  @var string */
    public $comment = null;
    
    /**  @var string */
    public $deadline = null;
    
    /**  @var int */
    public $wordCount = null;
    
    /**  @var string */
    public $createdTime = null;
    
    /**  @var \SolasMatch\Common\Protobufs\Models\Locale */
    public $sourceLocale = null;
    
    /**  @var \SolasMatch\Common\Protobufs\Models\Locale */
    public $targetLocale = null;
    
    /**  @var int */
    public $taskType = null;
    
    /**  @var string */
    public $taskStatus = null;
    
    /**  @var boolean */
    public $published = null;
    
    /**  @var string */
    public $archiveDate = null;
    
    /**  @var int */
    public $version = null;
    
    /**  @var string */
    public $fileName = null;
    
    /**  @var string */
    public $contentType = null;
    
    /**  @var string */
    public $uploadTime = null;
    
    /**  @var int */
    public $userIdClaimed = null;
    
    /**  @var int */
    public $userIdArchived = null;
    
    /**  @var string */
    public $prerequisites = null;
    
    /**  @var int */
    public $userIdTaskCreator = null;
    
    /**  @var string */
    public $archivedDate = null;
    

    /** @var \Closure[] */
    protected static $__extensions = array();

    public static function descriptor()
    {
      $descriptor = new \DrSlump\Protobuf\Descriptor(__CLASS__, 'SolasMatch.Common.Protobufs.Models.ArchivedTask');

      // OPTIONAL INT32 id = 1
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 1;
      $f->name      = "id";
      $f->type      = \DrSlump\Protobuf::TYPE_INT32;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      // OPTIONAL INT32 projectId = 2
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 2;
      $f->name      = "projectId";
      $f->type      = \DrSlump\Protobuf::TYPE_INT32;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      // OPTIONAL STRING title = 3
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 3;
      $f->name      = "title";
      $f->type      = \DrSlump\Protobuf::TYPE_STRING;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      // OPTIONAL STRING comment = 4
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 4;
      $f->name      = "comment";
      $f->type      = \DrSlump\Protobuf::TYPE_STRING;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      // OPTIONAL STRING deadline = 5
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 5;
      $f->name      = "deadline";
      $f->type      = \DrSlump\Protobuf::TYPE_STRING;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      // OPTIONAL INT32 wordCount = 6
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 6;
      $f->name      = "wordCount";
      $f->type      = \DrSlump\Protobuf::TYPE_INT32;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      // OPTIONAL STRING createdTime = 7
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 7;
      $f->name      = "createdTime";
      $f->type      = \DrSlump\Protobuf::TYPE_STRING;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      // OPTIONAL MESSAGE sourceLocale = 8
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 8;
      $f->name      = "sourceLocale";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->reference = '\SolasMatch\Common\Protobufs\Models\Locale';
      $descriptor->addField($f);

      // OPTIONAL MESSAGE targetLocale = 9
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 9;
      $f->name      = "targetLocale";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->reference = '\SolasMatch\Common\Protobufs\Models\Locale';
      $descriptor->addField($f);

      // OPTIONAL INT32 taskType = 10
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 10;
      $f->name      = "taskType";
      $f->type      = \DrSlump\Protobuf::TYPE_INT32;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      // OPTIONAL STRING taskStatus = 11
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 11;
      $f->name      = "taskStatus";
      $f->type      = \DrSlump\Protobuf::TYPE_STRING;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      // OPTIONAL BOOL published = 12
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 12;
      $f->name      = "published";
      $f->type      = \DrSlump\Protobuf::TYPE_BOOL;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      // OPTIONAL STRING archiveDate = 13
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 13;
      $f->name      = "archiveDate";
      $f->type      = \DrSlump\Protobuf::TYPE_STRING;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      // OPTIONAL INT32 version = 14
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 14;
      $f->name      = "version";
      $f->type      = \DrSlump\Protobuf::TYPE_INT32;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      // OPTIONAL STRING fileName = 15
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 15;
      $f->name      = "fileName";
      $f->type      = \DrSlump\Protobuf::TYPE_STRING;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      // OPTIONAL STRING contentType = 16
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 16;
      $f->name      = "contentType";
      $f->type      = \DrSlump\Protobuf::TYPE_STRING;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      // OPTIONAL STRING uploadTime = 17
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 17;
      $f->name      = "uploadTime";
      $f->type      = \DrSlump\Protobuf::TYPE_STRING;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      // OPTIONAL INT32 userIdClaimed = 18
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 18;
      $f->name      = "userIdClaimed";
      $f->type      = \DrSlump\Protobuf::TYPE_INT32;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      // OPTIONAL INT32 userIdArchived = 19
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 19;
      $f->name      = "userIdArchived";
      $f->type      = \DrSlump\Protobuf::TYPE_INT32;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      // OPTIONAL STRING prerequisites = 20
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 20;
      $f->name      = "prerequisites";
      $f->type      = \DrSlump\Protobuf::TYPE_STRING;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      // OPTIONAL INT32 userIdTaskCreator = 21
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 21;
      $f->name      = "userIdTaskCreator";
      $f->type      = \DrSlump\Protobuf::TYPE_INT32;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      // OPTIONAL STRING archivedDate = 22
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 22;
      $f->name      = "archivedDate";
      $f->type      = \DrSlump\Protobuf::TYPE_STRING;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      foreach (self::$__extensions as $cb) {
        $descriptor->addField($cb(), true);
      }

      return $descriptor;
    }

    /**
     * Check if <id> has a value
     *
     * @return boolean
     */
    public function hasId(){
      return $this->_has(1);
    }
    
    /**
     * Clear <id> value
     *
     * @return \SolasMatch\Common\Protobufs\Models\ArchivedTask
     */
    public function clearId(){
      return $this->_clear(1);
    }
    
    /**
     * Get <id> value
     *
     * @return int
     */
    public function getId(){
      return $this->_get(1);
    }
    
    /**
     * Set <id> value
     *
     * @param int $value
     * @return \SolasMatch\Common\Protobufs\Models\ArchivedTask
     */
    public function setId( $value){
      return $this->_set(1, $value);
    }
    
    /**
     * Check if <projectId> has a value
     *
     * @return boolean
     */
    public function hasProjectId(){
      return $this->_has(2);
    }
    
    /**
     * Clear <projectId> value
     *
     * @return \SolasMatch\Common\Protobufs\Models\ArchivedTask
     */
    public function clearProjectId(){
      return $this->_clear(2);
    }
    
    /**
     * Get <projectId> value
     *
     * @return int
     */
    public function getProjectId(){
      return $this->_get(2);
    }
    
    /**
     * Set <projectId> value
     *
     * @param int $value
     * @return \SolasMatch\Common\Protobufs\Models\ArchivedTask
     */
    public function setProjectId( $value){
      return $this->_set(2, $value);
    }
    
    /**
     * Check if <title> has a value
     *
     * @return boolean
     */
    public function hasTitle(){
      return $this->_has(3);
    }
    
    /**
     * Clear <title> value
     *
     * @return \SolasMatch\Common\Protobufs\Models\ArchivedTask
     */
    public function clearTitle(){
      return $this->_clear(3);
    }
    
    /**
     * Get <title> value
     *
     * @return string
     */
    public function getTitle(){
      return $this->_get(3);
    }
    
    /**
     * Set <title> value
     *
     * @param string $value
     * @return \SolasMatch\Common\Protobufs\Models\ArchivedTask
     */
    public function setTitle( $value){
      return $this->_set(3, $value);
    }
    
    /**
     * Check if <comment> has a value
     *
     * @return boolean
     */
    public function hasComment(){
      return $this->_has(4);
    }
    
    /**
     * Clear <comment> value
     *
     * @return \SolasMatch\Common\Protobufs\Models\ArchivedTask
     */
    public function clearComment(){
      return $this->_clear(4);
    }
    
    /**
     * Get <comment> value
     *
     * @return string
     */
    public function getComment(){
      return $this->_get(4);
    }
    
    /**
     * Set <comment> value
     *
     * @param string $value
     * @return \SolasMatch\Common\Protobufs\Models\ArchivedTask
     */
    public function setComment( $value){
      return $this->_set(4, $value);
    }
    
    /**
     * Check if <deadline> has a value
     *
     * @return boolean
     */
    public function hasDeadline(){
      return $this->_has(5);
    }
    
    /**
     * Clear <deadline> value
     *
     * @return \SolasMatch\Common\Protobufs\Models\ArchivedTask
     */
    public function clearDeadline(){
      return $this->_clear(5);
    }
    
    /**
     * Get <deadline> value
     *
     * @return string
     */
    public function getDeadline(){
      return $this->_get(5);
    }
    
    /**
     * Set <deadline> value
     *
     * @param string $value
     * @return \SolasMatch\Common\Protobufs\Models\ArchivedTask
     */
    public function setDeadline( $value){
      return $this->_set(5, $value);
    }
    
    /**
     * Check if <wordCount> has a value
     *
     * @return boolean
     */
    public function hasWordCount(){
      return $this->_has(6);
    }
    
    /**
     * Clear <wordCount> value
     *
     * @return \SolasMatch\Common\Protobufs\Models\ArchivedTask
     */
    public function clearWordCount(){
      return $this->_clear(6);
    }
    
    /**
     * Get <wordCount> value
     *
     * @return int
     */
    public function getWordCount(){
      return $this->_get(6);
    }
    
    /**
     * Set <wordCount> value
     *
     * @param int $value
     * @return \SolasMatch\Common\Protobufs\Models\ArchivedTask
     */
    public function setWordCount( $value){
      return $this->_set(6, $value);
    }
    
    /**
     * Check if <createdTime> has a value
     *
     * @return boolean
     */
    public function hasCreatedTime(){
      return $this->_has(7);
    }
    
    /**
     * Clear <createdTime> value
     *
     * @return \SolasMatch\Common\Protobufs\Models\ArchivedTask
     */
    public function clearCreatedTime(){
      return $this->_clear(7);
    }
    
    /**
     * Get <createdTime> value
     *
     * @return string
     */
    public function getCreatedTime(){
      return $this->_get(7);
    }
    
    /**
     * Set <createdTime> value
     *
     * @param string $value
     * @return \SolasMatch\Common\Protobufs\Models\ArchivedTask
     */
    public function setCreatedTime( $value){
      return $this->_set(7, $value);
    }
    
    /**
     * Check if <sourceLocale> has a value
     *
     * @return boolean
     */
    public function hasSourceLocale(){
      return $this->_has(8);
    }
    
    /**
     * Clear <sourceLocale> value
     *
     * @return \SolasMatch\Common\Protobufs\Models\ArchivedTask
     */
    public function clearSourceLocale(){
      return $this->_clear(8);
    }
    
    /**
     * Get <sourceLocale> value
     *
     * @return \SolasMatch\Common\Protobufs\Models\Locale
     */
    public function getSourceLocale(){
      return $this->_get(8);
    }
    
    /**
     * Set <sourceLocale> value
     *
     * @param \SolasMatch\Common\Protobufs\Models\Locale $value
     * @return \SolasMatch\Common\Protobufs\Models\ArchivedTask
     */
    public function setSourceLocale(\SolasMatch\Common\Protobufs\Models\Locale $value){
      return $this->_set(8, $value);
    }
    
    /**
     * Check if <targetLocale> has a value
     *
     * @return boolean
     */
    public function hasTargetLocale(){
      return $this->_has(9);
    }
    
    /**
     * Clear <targetLocale> value
     *
     * @return \SolasMatch\Common\Protobufs\Models\ArchivedTask
     */
    public function clearTargetLocale(){
      return $this->_clear(9);
    }
    
    /**
     * Get <targetLocale> value
     *
     * @return \SolasMatch\Common\Protobufs\Models\Locale
     */
    public function getTargetLocale(){
      return $this->_get(9);
    }
    
    /**
     * Set <targetLocale> value
     *
     * @param \SolasMatch\Common\Protobufs\Models\Locale $value
     * @return \SolasMatch\Common\Protobufs\Models\ArchivedTask
     */
    public function setTargetLocale(\SolasMatch\Common\Protobufs\Models\Locale $value){
      return $this->_set(9, $value);
    }
    
    /**
     * Check if <taskType> has a value
     *
     * @return boolean
     */
    public function hasTaskType(){
      return $this->_has(10);
    }
    
    /**
     * Clear <taskType> value
     *
     * @return \SolasMatch\Common\Protobufs\Models\ArchivedTask
     */
    public function clearTaskType(){
      return $this->_clear(10);
    }
    
    /**
     * Get <taskType> value
     *
     * @return int
     */
    public function getTaskType(){
      return $this->_get(10);
    }
    
    /**
     * Set <taskType> value
     *
     * @param int $value
     * @return \SolasMatch\Common\Protobufs\Models\ArchivedTask
     */
    public function setTaskType( $value){
      return $this->_set(10, $value);
    }
    
    /**
     * Check if <taskStatus> has a value
     *
     * @return boolean
     */
    public function hasTaskStatus(){
      return $this->_has(11);
    }
    
    /**
     * Clear <taskStatus> value
     *
     * @return \SolasMatch\Common\Protobufs\Models\ArchivedTask
     */
    public function clearTaskStatus(){
      return $this->_clear(11);
    }
    
    /**
     * Get <taskStatus> value
     *
     * @return string
     */
    public function getTaskStatus(){
      return $this->_get(11);
    }
    
    /**
     * Set <taskStatus> value
     *
     * @param string $value
     * @return \SolasMatch\Common\Protobufs\Models\ArchivedTask
     */
    public function setTaskStatus( $value){
      return $this->_set(11, $value);
    }
    
    /**
     * Check if <published> has a value
     *
     * @return boolean
     */
    public function hasPublished(){
      return $this->_has(12);
    }
    
    /**
     * Clear <published> value
     *
     * @return \SolasMatch\Common\Protobufs\Models\ArchivedTask
     */
    public function clearPublished(){
      return $this->_clear(12);
    }
    
    /**
     * Get <published> value
     *
     * @return boolean
     */
    public function getPublished(){
      return $this->_get(12);
    }
    
    /**
     * Set <published> value
     *
     * @param boolean $value
     * @return \SolasMatch\Common\Protobufs\Models\ArchivedTask
     */
    public function setPublished( $value){
      return $this->_set(12, $value);
    }
    
    /**
     * Check if <archiveDate> has a value
     *
     * @return boolean
     */
    public function hasArchiveDate(){
      return $this->_has(13);
    }
    
    /**
     * Clear <archiveDate> value
     *
     * @return \SolasMatch\Common\Protobufs\Models\ArchivedTask
     */
    public function clearArchiveDate(){
      return $this->_clear(13);
    }
    
    /**
     * Get <archiveDate> value
     *
     * @return string
     */
    public function getArchiveDate(){
      return $this->_get(13);
    }
    
    /**
     * Set <archiveDate> value
     *
     * @param string $value
     * @return \SolasMatch\Common\Protobufs\Models\ArchivedTask
     */
    public function setArchiveDate( $value){
      return $this->_set(13, $value);
    }
    
    /**
     * Check if <version> has a value
     *
     * @return boolean
     */
    public function hasVersion(){
      return $this->_has(14);
    }
    
    /**
     * Clear <version> value
     *
     * @return \SolasMatch\Common\Protobufs\Models\ArchivedTask
     */
    public function clearVersion(){
      return $this->_clear(14);
    }
    
    /**
     * Get <version> value
     *
     * @return int
     */
    public function getVersion(){
      return $this->_get(14);
    }
    
    /**
     * Set <version> value
     *
     * @param int $value
     * @return \SolasMatch\Common\Protobufs\Models\ArchivedTask
     */
    public function setVersion( $value){
      return $this->_set(14, $value);
    }
    
    /**
     * Check if <fileName> has a value
     *
     * @return boolean
     */
    public function hasFileName(){
      return $this->_has(15);
    }
    
    /**
     * Clear <fileName> value
     *
     * @return \SolasMatch\Common\Protobufs\Models\ArchivedTask
     */
    public function clearFileName(){
      return $this->_clear(15);
    }
    
    /**
     * Get <fileName> value
     *
     * @return string
     */
    public function getFileName(){
      return $this->_get(15);
    }
    
    /**
     * Set <fileName> value
     *
     * @param string $value
     * @return \SolasMatch\Common\Protobufs\Models\ArchivedTask
     */
    public function setFileName( $value){
      return $this->_set(15, $value);
    }
    
    /**
     * Check if <contentType> has a value
     *
     * @return boolean
     */
    public function hasContentType(){
      return $this->_has(16);
    }
    
    /**
     * Clear <contentType> value
     *
     * @return \SolasMatch\Common\Protobufs\Models\ArchivedTask
     */
    public function clearContentType(){
      return $this->_clear(16);
    }
    
    /**
     * Get <contentType> value
     *
     * @return string
     */
    public function getContentType(){
      return $this->_get(16);
    }
    
    /**
     * Set <contentType> value
     *
     * @param string $value
     * @return \SolasMatch\Common\Protobufs\Models\ArchivedTask
     */
    public function setContentType( $value){
      return $this->_set(16, $value);
    }
    
    /**
     * Check if <uploadTime> has a value
     *
     * @return boolean
     */
    public function hasUploadTime(){
      return $this->_has(17);
    }
    
    /**
     * Clear <uploadTime> value
     *
     * @return \SolasMatch\Common\Protobufs\Models\ArchivedTask
     */
    public function clearUploadTime(){
      return $this->_clear(17);
    }
    
    /**
     * Get <uploadTime> value
     *
     * @return string
     */
    public function getUploadTime(){
      return $this->_get(17);
    }
    
    /**
     * Set <uploadTime> value
     *
     * @param string $value
     * @return \SolasMatch\Common\Protobufs\Models\ArchivedTask
     */
    public function setUploadTime( $value){
      return $this->_set(17, $value);
    }
    
    /**
     * Check if <userIdClaimed> has a value
     *
     * @return boolean
     */
    public function hasUserIdClaimed(){
      return $this->_has(18);
    }
    
    /**
     * Clear <userIdClaimed> value
     *
     * @return \SolasMatch\Common\Protobufs\Models\ArchivedTask
     */
    public function clearUserIdClaimed(){
      return $this->_clear(18);
    }
    
    /**
     * Get <userIdClaimed> value
     *
     * @return int
     */
    public function getUserIdClaimed(){
      return $this->_get(18);
    }
    
    /**
     * Set <userIdClaimed> value
     *
     * @param int $value
     * @return \SolasMatch\Common\Protobufs\Models\ArchivedTask
     */
    public function setUserIdClaimed( $value){
      return $this->_set(18, $value);
    }
    
    /**
     * Check if <userIdArchived> has a value
     *
     * @return boolean
     */
    public function hasUserIdArchived(){
      return $this->_has(19);
    }
    
    /**
     * Clear <userIdArchived> value
     *
     * @return \SolasMatch\Common\Protobufs\Models\ArchivedTask
     */
    public function clearUserIdArchived(){
      return $this->_clear(19);
    }
    
    /**
     * Get <userIdArchived> value
     *
     * @return int
     */
    public function getUserIdArchived(){
      return $this->_get(19);
    }
    
    /**
     * Set <userIdArchived> value
     *
     * @param int $value
     * @return \SolasMatch\Common\Protobufs\Models\ArchivedTask
     */
    public function setUserIdArchived( $value){
      return $this->_set(19, $value);
    }
    
    /**
     * Check if <prerequisites> has a value
     *
     * @return boolean
     */
    public function hasPrerequisites(){
      return $this->_has(20);
    }
    
    /**
     * Clear <prerequisites> value
     *
     * @return \SolasMatch\Common\Protobufs\Models\ArchivedTask
     */
    public function clearPrerequisites(){
      return $this->_clear(20);
    }
    
    /**
     * Get <prerequisites> value
     *
     * @return string
     */
    public function getPrerequisites(){
      return $this->_get(20);
    }
    
    /**
     * Set <prerequisites> value
     *
     * @param string $value
     * @return \SolasMatch\Common\Protobufs\Models\ArchivedTask
     */
    public function setPrerequisites( $value){
      return $this->_set(20, $value);
    }
    
    /**
     * Check if <userIdTaskCreator> has a value
     *
     * @return boolean
     */
    public function hasUserIdTaskCreator(){
      return $this->_has(21);
    }
    
    /**
     * Clear <userIdTaskCreator> value
     *
     * @return \SolasMatch\Common\Protobufs\Models\ArchivedTask
     */
    public function clearUserIdTaskCreator(){
      return $this->_clear(21);
    }
    
    /**
     * Get <userIdTaskCreator> value
     *
     * @return int
     */
    public function getUserIdTaskCreator(){
      return $this->_get(21);
    }
    
    /**
     * Set <userIdTaskCreator> value
     *
     * @param int $value
     * @return \SolasMatch\Common\Protobufs\Models\ArchivedTask
     */
    public function setUserIdTaskCreator( $value){
      return $this->_set(21, $value);
    }
    
    /**
     * Check if <archivedDate> has a value
     *
     * @return boolean
     */
    public function hasArchivedDate(){
      return $this->_has(22);
    }
    
    /**
     * Clear <archivedDate> value
     *
     * @return \SolasMatch\Common\Protobufs\Models\ArchivedTask
     */
    public function clearArchivedDate(){
      return $this->_clear(22);
    }
    
    /**
     * Get <archivedDate> value
     *
     * @return string
     */
    public function getArchivedDate(){
      return $this->_get(22);
    }
    
    /**
     * Set <archivedDate> value
     *
     * @param string $value
     * @return \SolasMatch\Common\Protobufs\Models\ArchivedTask
     */
    public function setArchivedDate( $value){
      return $this->_set(22, $value);
    }
  }
}

